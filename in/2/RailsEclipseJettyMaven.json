{"href":"https://kenai.com/api/projects/jruby/features/wiki/pages/RailsEclipseJettyMaven/revisions/2.json","name":"RailsEclipseJettyMaven","number":2,"page_href":"https://kenai.com/api/projects/jruby/features/wiki/pages/RailsEclipseJettyMaven.json","person":"john_brock","description":"","text":"I am using Eclipse and Maven for a number of Java projects. For our development we use \"Run Jetty Run\" to launch a Jetty servlet really quickly. I'd like to use this combo for JRuby + Rails development - leveraging many of the benefits of these tools that I've worked hard on learning.\r\n\r\n0 - Initial Setup\r\n\r\n* create a test project\r\n* create a test rails app\r\n* create a pom.xml in your test project\r\n\r\n1 - Run Jetty Run\r\n\r\nIf you don't have it and want to try - you can add the site (and install) to your Eclipse feature sites\r\n\r\n http://run-jetty-run.googlecode.com/svn/trunk/updatesite\r\n\r\n\r\n2 - Maven\r\n\r\nI'm going to assume that you're familiar with Maven. What I've determined you'll need at a minimum is the following additional dependencies:\r\n\r\n<pre>\r\n    <dependency>\r\n      <groupId>org.jruby</groupId>\r\n      <artifactId>jruby</artifactId>\r\n      <version>1.1</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.jruby.extras</groupId>\r\n      <artifactId>goldspike</artifactId>\r\n      <version>1.6</version>\r\n    </dependency>\r\n</pre>\r\n3 - Setting up your webapp\r\n\r\nCreate a directory \"src/main/webapp/WEB-INF\" if necessary\r\n\r\nCreate a [[Editing Rails Eclipse Jetty Maven web.xml|web.xml ]] web.xml file\r\n\r\n4 - Copy (symlink) over your Rails app. I'd prefer to put it into a subdirectory rather than just toss into the webapp dir. So make a subdir like \"WEB-INF/rails\" and toss your entire rails app in there. You can change the name of this directory in the web.xml file - look for \"rails.root\"\r\n\r\nSo you'll have a directory structure like:\r\n\r\n src/main/webapp/WEB-INF/rails/app\r\n src/main/webapp/WEB-INF/rails/config\r\n src/main/webapp/WEB-INF/rails/db\r\n etc.\r\n plus\r\n src/main/webapp/WEB-INF/web.xml\r\n\r\n5 - Adding your gems\r\n\r\nPut them in \"src/main/webapp/WEB-INF/gems\". Make sure this directory exists before using the commands:\r\n\r\n cd src/main/webapp/WEB-INF\r\n gem install rails             --install-dir=gems --no-rdoc --no-ri\r\n gem install activerecord-jdbc-adapter --install-dir=gems --no-rdoc --no-ri\r\n \r\n plus add your own\r\n\r\n6 - Create your Run Jetty Run configuration\r\n\r\n* Open Eclipse's Run Dialog\r\n* Add a new \"Jetty Webapp\"\r\n** Set the project to this ''Test Project''\r\n** Set the context to something you like like ''jrails''\r\n** Set the WebApp dir to \"src/main/webapp\"\r\n* Apply\r\n* Run\r\n\r\n7 - You should be able to point your browser to http://localhost:8080/jrails/\r\n\r\n8 - Watch your console - debug ad naseum - amend these instructions\r\n\r\n9 - Use Maven to make your WAR file when ready\r\n\r\n mvn clean war:exploded\r\nor\r\n mvn clean war:war\r\n\r\n''I just figured this out - so I haven't used the config extensively. As I discover more things I will come back and put in debugging tips.''\r\n","created_at":"2008-08-12T20:37:57Z","content_type":"application/vnd.com.kenai.page.revision+json"}