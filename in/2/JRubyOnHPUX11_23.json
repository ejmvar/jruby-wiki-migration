{"href":"https://kenai.com/api/projects/jruby/features/wiki/pages/JRubyOnHPUX11_23/revisions/2.json","name":"JRubyOnHPUX11_23","number":2,"page_href":"https://kenai.com/api/projects/jruby/features/wiki/pages/JRubyOnHPUX11_23.json","person":"pfussell","description":"Added nav links at top and a title.","text":"[[Home|&raquo; JRuby Project Home Page]] &nbsp;&nbsp; [[Getting Started|&raquo; Getting Started with JRuby]]\n==Using JRuby on HPUX==\nThis document describes a workaround to get JRUBY working on HPUX as untaring jruby-bin-1.0.tar yields the following error in addition to missing jar files in $JRUBY_HOME/lib\n\n  x jruby-1.0/lib/ruby/gems/1.8/doc/rspec-1.0.5/ri/Spec/Runner/Formatter/RdocForma\n  tter/example_passed-i., 216 bytes, 1 tape blocks\n  tar: ././@LongLink creating as regular file.\n  x ././@LongLink, 125 bytes, 1 tape blocks\n  directory checksum error \n \n\n== Workaround: ==\n\nThis document was authored by a newbie. There might be better ways to make JRUBY work on HPUX. (Don't know how to test or check if all jruby functions, features are working with this workaround, atleast my scripts seems to work):\n\n* tar xvf jruby-bin-1.0.tar (ignore the @LongLink errors)\n* copy the following jars to JRUBY_HOME/lib directory (I had a copy of these jar files on a linux box where the untar worked successfully)\n\n    asm-2.2.3.jar\n    asm-commons-2.2.3.jar\n    backport-util-concurrent.jar\n    bsf.jar\n    emma.jar\n    emma_ant.jar\n    jarjar-0.7.jar\n    jline-0.9.91.jar\n    jruby.jar\n    junit.jar\n\n\n* Modified $JRUBY_HOME/bin/jruby bash file to the following: (had to do this as I don't have bash on my HP box and don't know how to convert a bash script into ksh or some other shell script)\n\n  JRUBY_HOME=\"<nowiki><<jruby_home>></nowiki>\" #Substitute your jruby_home\n  JRUBY_OPTS=\"\"\n  JAVA_CMD='java'\n  JRUBY_SHELL=/bin/sh\n  CP=\"$JRUBY_HOME/lib/asm-2.2.3.jar:              \\\n  $JRUBY_HOME/lib/asm-commons-2.2.3.jar:          \\\n  $JRUBY_HOME/lib/backport-util-concurrent.jar:   \\\n  $JRUBY_HOME/lib/bsf.jar:                        \\\n  $JRUBY_HOME/lib/emma.jar:                       \\\n  $JRUBY_HOME/lib/emma_ant.jar:                   \\\n  $JRUBY_HOME/lib/jarjar-0.7.jar:                 \\\n  $JRUBY_HOME/lib/jline-0.9.91.jar:               \\\n  $JRUBY_HOME/lib/jruby.jar:                      \\\n  $JRUBY_HOME/lib/junit.jar\"\n  JRUBY_BASE=\"$JRUBY_HOME\"\n  JAVA_MEM=-Xmx256m\n  JAVA_STACK=-Xss1024k\n  JAVA_OPTS=\"$JAVA_MEM $JAVA_STACK -Xverify:none -da\"\n  exec \"$JAVA_CMD\" $JAVA_OPTS -classpath \"$CP\"    \\\n    \"-Djruby.base=$JRUBY_BASE\" \"-Djruby.home=$JRUBY_HOME\" \\\n    \"-Djruby.lib=$JRUBY_BASE/lib\" -Djruby.script=jruby    \\\n    \"-Djruby.shell=$JRUBY_SHELL\"                          \\\n    org.jruby.Main $JRUBY_OPTS \"$@\"\n\n* Setup your environment variables\n\n   export JAVA_HOME=\"<nowiki><<java_home>></nowiki>\" #Substitute your java_home\n   export JRUBY_HOME=\"<nowiki><<jruby_home>></nowiki>\" #Substitute your jruby_home\n   export PATH=$PATH:$JRUBY_HOME/bin:$JAVA_HOME/bin:.\n\n* Test JRUBY\n\n   jruby -e '  puts \"jruby is working\"   '\n\n==Alternative approach==\n\nBefore going through all of the work above, you may want to try downloading and building GNU tar. I used GNU tar to unpack the JRuby tar and everything worked great. No errors.\n","created_at":"2009-06-14T00:07:10Z","content_type":"application/vnd.com.kenai.page.revision+json"}