{"href":"https://kenai.com/api/projects/jruby/features/wiki/pages/Warbler/revisions/4.json","name":"Warbler","number":4,"page_href":"https://kenai.com/api/projects/jruby/features/wiki/pages/Warbler.json","person":"pfussell","description":"More edits.","text":"[[Home|&raquo; JRuby Project Wiki Home Page]] \n<h1>Warbler</h1>\n\nThe Warbler readme at [http://caldersphere.rubyforge.org/warbler/] describes Warbler as follows:\n\n:''[http://caldersphere.rubyforge.org/warbler/classes/Warbler.html Warbler] is a gem to make a <tt>.war</tt> file out of a [http://caldersphere.rubyforge.org/warbler/classes/Rails.html Rails], Merb, or Rack-based application. The intent is to provide a minimal, flexible, Ruby-like way to bundle all your application files for deployment to a Java application server. [http://caldersphere.rubyforge.org/warbler/classes/Warbler.html Warbler] provides a sane set of out-of-the box defaults that should allow most [http://caldersphere.rubyforge.org/warbler/classes/Rails.html Rails] applications without external gem dependencies (aside from Rails itself) to assemble and ''just work''. Warbler bundles JRuby and [[JRuby_Rack|JRuby-Rack]] for dispatching requests to your application inside the Java application server, and assembles all jar files in <tt>WARBLER_HOME/lib/*.jar</tt> into your application. No external dependencies are downloaded.''\n\nCreated by [http://blog.nicksieger.com Nick Sieger].\n\n[http://blog.nicksieger.com/articles/2007/09/04/warbler-a-little-birdie-to-introduce-your-rails-app-to-java Announcement: Warbler, A Little Birdie To Introduce Your Rails App To Java] (Nick Sieger blog, September, 2007)<br/><br/>\n\n__TOC__\n\n== Defaults ==\n\nCurrently, the Warbler gem includes JRuby 1.1.1 and JRuby-Rack 0.9.\n\nIt's also possible to set different versions of JRuby and JRuby-Rack (or GoldSpike, the previously used servlet adapter) without modifying the gem files. This ensures that your build is reproducible. There are a couple of ways to do this:\n* '''Use Warbler as a plugin.'''\n*# Install Warbler as a plugin:<br/> &nbsp;<tt>jruby -S warble pluginize</tt>\n*# Remove existing jar files from <tt>vendor/plugins/warbler/lib</tt> and replace them with the versions you want to use.\n* '''Override <tt>java_libs</tt>'''<br/>Override Warbler's <tt>java_libs</tt> so you can provide your own. You can override individual jar files, or you can remove all the defaults and provide all of your own.\n**For example, to replace the version of JRruby that is bundled with your app, add the following code to <tt>config/warble.rb</tt> and put the desired <tt>jruby-complete</tt> jar into the <tt>lib</tt> directory of your rails application:<br/><tt> &nbsp;config.java_libs.reject! { |lib| lib =~ /jruby-complete/ }</tt><br/><br/>\n** If you want to provide all the jars, set <tt>config.java_libs = []</tt> and put copies of all of the required jars in <tt>lib</tt>.\n\n== Automatically Figure Out Gems ==\nThe following code snippet in <tt>config/warble.rb</tt> will cause Warbler to automatically bundle all gems loaded by the web application.\n  # Include all gems used by the web application\n  require \"#{RAILS_ROOT}/config/boot\"\n  BUILD_GEMS = %w(warbler rake rcov)\n  for gem in Gem.loaded_specs.values\n    next if BUILD_GEMS.include?(gem.name)\n    config.gems[gem.name] = gem.version.version\n  end\n\n== Upgrades ==\n\n===Upgrading to Warbler 0.9.9 ===\nThe introduction of JRuby-Rack with this release requires some changes. While it does attempt to make a smooth and gentle transition from Goldspike, if you are upgrading from a previous version, you might want to invest the time to make a clean break.\n\n==== Required Changes to Upgrade to JRuby Rack ====\n\n===== warbler.rb sample diff =====\n\n - config.java_libs.reject! {|lib| lib =~ /jruby-complete|goldspike/ }\n - # Control the pool of Rails runtimes\n - # (Goldspike-specific; see README for details)\n - config.webxml.pool.maxActive = ENV['max'] ||= '10'\n - config.webxml.pool.minIdle = ENV['min'] ||= '4'\n - config.webxml.pool.c?heckInterval = 0\n - config.webxml.pool.maxWait = 30000\n + config.webxml.jruby.?min.runtimes = 2\n + config.webxml.jruby.?max.runtimes = 10\n\n===== web.xml.erb sample diff =====\n<pre>\n  <web-app>\n - <context-param>\n - <param-name>jr?uby.standalone</p?aram-name>\n - <param-value><%= webxml.standalone %></param-value>\n - </context-param>\n -\n - <% if !webxml.standalone && webxml.jruby_home %>\n - <!-- jruby.home can be set either here, or as the system property jruby.home -->\n - <context-param>\n - <param-name>jr?uby.home</param-n?ame>\n - <param-value><%= webxml.jruby_home %></param-value>\n - </context-param>\n - <% end %>\n -\n - <context-param>\n - <param-name>ra?ils.root</param-n?ame>\n - <param-value>/?WEB-INF</param-va?lue>\n - </context-param>\n -\n - <context-param>\n - <param-name>ra?ils.env</param-na?me>\n - <param-value><%= webxml.rails_env || 'production' %></param-value>\n - </context-param>\n -\n - <% webxml.pool.marshal_dump.each do |k,v| %>\n - <context-param>\n - <param-name>jr?uby.pool.<%= k %></param-name>\n - <param-value><%= v %></param-value>\n - </context-param>\n - <% end %>\n -\n - <context-param>\n - <param-name>fi?les.default</para?m-name>\n - <param-value>r?ails</param-value?>\n - <description>\n - The files servlet should forward to the rails servlet if no file could be found\n - </description>\n - </context-param>\n -\n - <context-param>\n - <param-name>fi?les.prefix</param?-name>\n - <param-value>?</param-value>\n - <description>\n - Prefix added to static files\n - </description>\n - </context-param>\n -\n - <context-param>\n - <param-name>jr?uby.session_store?</param-name>\n - <param-value>d?b</param-value?><!--This value really means let Rails take care of session store-->\n - </context-param>\n -\n - <listener>\n - <listener-class?>org.jruby.webapp.R?ailsContextListener?</listener-class?>\n - </listener>\n -\n - <servlet>\n - <servlet-name>?rails</servlet-na?me>\n - <servlet-class?>org.jruby.webapp.Ra?ilsServlet</servl?et-class>\n - </servlet>\n - <servlet>\n - <servlet-name>?files</servlet-na?me>\n - <servlet-class?>org.jruby.webapp.Fi?leServlet</servle?t-class>\n - </servlet>\n -\n - <!-- Allow all requests to go to the files servlet first -->\n - <% servlet_name = Warbler::VERSION < \"0.9.9\" ?\n - webxml.servlet_name :\n - webxml.context_param?s['servlet_name'] %>\n - <servlet-mapping>\n - <servlet-name><%= servlet_name || 'files' %></servlet-name>\n - <url-pattern>/?</url-pattern>?\n - </servlet-mapping>\n -\n - <% if webxml.jndi %>\n - <resource-ref>\n - <res-ref-name><%= webxml.jndi %></res-ref-name>\n - <res-type>java?x.sql.DataSource<?/res-type>\n - <res-auth>Cont?ainer</res-auth?>\n - </resource-ref>\n - <% end %>\n +<% webxml.context_params.each do |k,v| %> \n + <context-param>\n + <param-name><%= k %></param-name>\n + <param-value><%= v %></param-value>\n + </context-param>\n +<% end %>\n +\n + <filter>\n + <filter-name>R?ackFilter</filter?-name>\n + <filter-class>?org.jruby.rack.RackF?ilter</filter-cla?ss>\n + </filter>\n + <filter-mapping>\n + <filter-name>R?ackFilter</filter?-name>\n + <url-pattern>/?*</url-pattern?>\n + </filter-mapping>\n +\n + <listener>\n + <listener-class><%= webxml.servlet_context_listener %></listener-class>\n + </listener>\n +\n +<% if webxml.jndi then webxml.jndi.each do |jndi| %>\n + <resource-ref>\n + <res-ref-name><%= jndi %></res-ref-name>\n + <res-type>java?x.sql.DataSource<?/res-type>\n + <res-auth>Cont?ainer</res-auth?>\n + </resource-ref>\n +<% end; end %>\n</pre>\n\n==== Known Issue - <tt>PoolableObjectFactory</tt> <tt>NoClassDefFoundError</tt> ====\nThis error indicates that the application is still attempting to use Goldspike. Ensure that you do not have <tt>goldspike.jar</tt> included in the <tt>.war</tt> file, and ensure that your <tt>web.xml</tt> file is not trying to use the old Goldspike servlet. Additionally, ensure that you don't have the Goldspike rails plug-in if you are running Rails.\n\nHere's a sample of the error:\n\n org.apache.catalina.core.StandardContext listenerStart \n SEVERE: Error configuring application listener of class org.jruby.webapp.RailsContextListener\n java.lang.NoClassDefFoundError: org/apache/commons/pool/PoolableObjectFactory\n         at java.lang.Class.getDeclaredConstructors0(Native Method)\n         at java.lang.Class.privateGetDeclaredConstructors(Class.java:2389)\n         at java.lang.Class.getConstructor0(Class.java:2699) \n\n== See Also ==\n* [http://blogs.sun.com/arungupta/entry/rails_and_java_ee_integration1 Rails and Java EE integration - Warbler instead of Goldspike] (Arun Gupta)\n* [http://fuzzypanic.blogspot.com/2008/01/jruby-war-packaging.html JRuby .war packaging (Warbler) for Rails 2.0] (Mike Herrick)\n* [http://blog.nicksieger.com/articles/2007/09/04/warbler-a-little-birdie-to-introduce-your-rails-app-to-java | Warbler, A Little Birdie To Introduce Your Rails App To Java] (Nick Sieger)\n","created_at":"2009-07-01T20:33:27Z","content_type":"application/vnd.com.kenai.page.revision+json"}