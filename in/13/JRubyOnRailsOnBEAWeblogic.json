{"href":"https://kenai.com/api/projects/jruby/features/wiki/pages/JRubyOnRailsOnBEAWeblogic/revisions/13.json","name":"JRubyOnRailsOnBEAWeblogic","number":13,"page_href":"https://kenai.com/api/projects/jruby/features/wiki/pages/JRubyOnRailsOnBEAWeblogic.json","person":"rickyw","description":"Added links to JDK 5, Ruby 1.1.1 WebLogic, and MySQL downloads","text":"[[Home|&raquo; JRuby Project Wiki Home Page]] &nbsp; &nbsp; [[JRubyOnRails#War_File_Deployment|&raquo; JRuby on Rails: War File Deployment]]\n<h1> JRuby on Rails on Oracle WebLogic</h1>\nThis page describes how to use Oracle WebLogic 10 with JRuby and Rails.\n\n'''Note:''' ''We could use some help verifying the information on this page with later versions of [http://www.oracle.com/appserver/appserver_family.html Oracle WebLogic], such as version 11g.''\n<br/><br/>\n\n__TOC__\n\n== Prerequisites ==\n* [http://dist.codehaus.org/jruby/1.1.1/ JRuby 1.1.1]\n* [http://java.sun.com/javase/downloads/index_jdk5.jsp Java JDK 5] \n* [http://e-docs.bea.com/platform/suppconfigs/configs100/100_over/overview.html Oracle WebLogic 10] \n* [http://dev.mysql.com/downloads/mysql/5.0.html MySQL Database v 5]\n* <a href=\"{{project warbler page home}}\">Warbler</a>\n\nThe JRuby 1.1.x series releases require Java 5, which was first supported in BEA WebLogic version 9.2. In this example we're using Oracle WebLogic 10.\n\n== Installing Java, JRuby, Rails, and Required Gems ==\n# Download and install [http://java.sun.com/javase/downloads/index_jdk5.jsp JDK 5] and [http://dist.codehaus.org/jruby/1.1.1/ JRuby 1.1.1], and make sure you set <tt>JAVA_HOME/bin</tt> and <tt>JRUBY_HOME/bin</tt> in your PATH environment variable.\n# Install Rails 2.0:<br/><tt> &nbsp;  jruby -S gem install rails</tt>\n# Install the activerecord-jdbcmysql-adapter gem:<br/><tt> &nbsp; jruby -S gem install activerecord-jdbcmysql-adapter</tt>\n# Install the JRuby Open SSL gem:<br/><tt> &nbsp; jruby -S gem install jruby-openssl</tt>\n\n== Creating and Running a Rails 2.0 Application ==\n# Create a Rails application:<br/><tt> &nbsp; jruby -S rails books --database=mysql</tt><br/>This will generate the skeleton of a Rails application.\n# Navigate to the <tt>books/</tt> directory and scaffold a book controller and model:<br/><tt> &nbsp; jruby script/generate scaffold book title:string author:string isbn:string desription:text</tt>\n# Start the MySQL database server.\n# Set the username and password for your database server in <tt>config/database.yml</tt>. The default for MySQL is <tt>username: root</tt> and a blank password.\n# Change the adapter from <tt>mysql</tt> to <tt>jdbcmysql</tt> in <tt>config/database.yml</tt>.\n# Create the required databases:<br/><tt> &nbsp; jruby -S rake db:create:all</tt><br/>This creates the three databases in <tt>database.yml</tt>, namely:\n#* books_development\n#* books_test\n#* books_production    \n# Create required tables by running your migrations in all environments:<br/><tt> &nbsp; jruby -S rake db:migrate</tt><br/><tt> &nbsp; jruby -S rake db:migrate RAILS_ENV=test</tt><br/><tt> &nbsp; jruby -S rake db:migrate RAILS_ENV=production</tt>\n# Start your application by using WEBrick:<br/><tt> &nbsp; jruby script\\server</tt>\n# Point your browser at:<br/><tt> &nbsp; <nowiki>http://localhost:3000/books</nowiki></tt>\n\nYour Rails application is now running on Java with the Ruby MySQL adapter.\n\n== Packaging a Rails Application Into a WAR ==\n# Install the warbler gem:<br/><tt> &nbsp;  jruby -S gem install warbler</tt>\n# Generate the warbler configuration file:<br/><tt> &nbsp;  jruby -S warble config</tt>\n# Modify <tt>books/config/warble.rb</tt> to include additional gems:<br/><tt> &nbsp; config.gems += [\"activerecord-jdbcmysql-adapter\", \"jruby-openssl\"]</tt><br/> These gems will be included in the generated war file. The Rails gem will be included by default.\n# Use warbler to package the rails app into a war and create <tt>books.war</tt>:<br/><tt> &nbsp; warble war</tt>\n# If for some reason the Rails gem was not included, try freezing Rails:<br/><tt> &nbsp; jruby -S rake rails:freeze:gems</tt>\n\n== Deploying to Oracle WebLogic ==\n# Create a new WebLogic domain.\n# Start the admin server.\n# Point your browser at:<br/><tt> &nbsp; <nowiki>http://localhost:7001/console</nowiki></tt>\n# Install the WAR application you previously packaged and start it. (For this example it can be installed on the Admin server.)\n# Point your browser at:<br/><tt> &nbsp;  <nowiki>http://localhost:7001/books/books</nowiki></tt>\n# Replace the application context (first ''books'') with your context if needed.\n\nThe first time you access the application it will take quite a while to load. If you get an error message saying something like''the server is currently overloaded'', you should try to reload it.\n\n== Using a JDBC Datasource in WebLogic==\n\n===Configuring WebLogic ===\nCreate a new datasource in the WebLogic console.\n# JDBC datasoure properties:<br/><tt> &nbsp; Name: books_production_ds<br/> &nbsp; JNDI name: jdbc/books_production_ds <br/> &nbsp; Databse type: MySQL <br/> &nbsp; Database driver: com.mysql.jdbc.Driver</tt>\n# Transaction options: Keep default transaction options.\n# Connection properties:<br/><tt> &nbsp; Database_name: books_production<br/> &nbsp; Host name: localhost<br/> &nbsp; Port: 3306<br/> &nbsp; Database user name: root <br/> &nbsp; Password: &lt;leave blank&gt;</tt>\n# Test configuration: Connection test should succeed.\n# Targets\n## Select AdminServer.\n## Finish and activate changes.\n\n=== Configuring the Rails Application ===\n# Edit <tt>books/config/database.yml</tt>.\n# Replace the <tt>production</tt> block with:<br/><tt> &nbsp; production:<br/> &nbsp; adapter: jdbc<br/> &nbsp; jndi: jdbc/books_production_ds</tt>\n# Package your application using warble:<br/><tt> &nbsp; jruby -S warble</tt>\n\n=== Updating the Application in WebLogic ===\n# Update the WAR application in the WebLogic console\n# Point your browser at:<br/><tt> &nbsp; <nowiki>http://localhost:7001/books/books</nowiki></tt>\n\nThat's it!\n\n== Known Issues ==\nIf you get this [http://www.ruby-forum.com/topic/155930 error], you need to update JRuby-Rack (currently version 0.9.4) to handle WebLogic returning null from the call to <tt>ServletContext.getRealPath(String)</tt>.\n\nIf you get this error on windows, (note the extra C: at the end of the path.)\n     org.jruby.rack.RackInitializationException: No such file or directory - \n     No such file or directory - \n     C:/bea/10.1/wlserver_10.0/samples/domains/wl_server/servers/examplesServer/tmp/_WL_user/books/2htmyu/war/WEB-INF/C:\nyou need to apply [http://jira.codehaus.org/browse/JRUBY-1401 this patch] to JRuby, and include your patched <tt>jruby-complete.jar</tt> in your rails app's <tt>lib</tt> directory. Add the following line to your <tt>config/warble.rb</tt> file to prevent Warbler from overwriting your patched jar:\n     config.java_libs.reject! { |lib| lib =~ /jruby-complete/ }\n\n\nIf you get an '<tt>Unknown database</tt>' error when you <tt>db:migrate</tt>, run <tt>jruby script/generate jdbc</tt> and then proceed to create the required databases (<tt>jruby -S rake db:create:all</tt>) and continue the above steps from there. Do not change the adapter name in <tt>config/database.yml</tt>. The adapter name should remain <tt>mysql</tt> (not <tt>jdbcmysql</tt>).\nSee [http://blog.emptyway.com/2008/04/08/120-seconds-guide-to-jruby-on-rails#comment-38471] or\n[http://blog.nicksieger.com/articles/2009/10/12/fresh-0-9-2-activerecord-jdbc-adapter-release] ","created_at":"2010-01-27T18:38:31Z","content_type":"application/vnd.com.kenai.page.revision+json"}