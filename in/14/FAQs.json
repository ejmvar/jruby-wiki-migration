{"href":"https://kenai.com/api/projects/jruby/features/wiki/pages/FAQs/revisions/14.json","name":"FAQs","number":14,"page_href":"https://kenai.com/api/projects/jruby/features/wiki/pages/FAQs.json","person":"enebo","description":"Added Java and JRuby Interop section and liked to some array tips on Cookbook","text":"__TOC__\n=Execution Environments=\n==Can I run JRuby on Java Micro Edition?==\n\nSomewhat.  See [[JRubyOnJavaMicroEdition|JRuby on JME]].\n\n==How can I run JRuby using Java Web Start?==\n\nHere is a page dedicated to this: [[JRuby on Web Start]]\n\n==How can I make my Ruby scripts execute with JRuby on unix systems like other scripts?==\n\nInclude a \"hash bang\" line on the top of your jruby script like this:\n\n #!/usr/bin/env jruby\n\nThat will use the system wide installed jruby interpreter to run your script.\n\nIf you would like to use a local copy of JRuby to run your script, give the relative or absolute path to the jruby program:\n\n #!/usr/bin/env jruby-1.1RC2/bin/jruby\n\nTo run the script directly, you need to set the \"x\" flag on it:\n\n chmod +x your_script.rb\n\nYou can now start you script with \n\n ./your_script.rb\n\n\n=General=\n\n==Where can I find more information about the Ruby language?==\n\n[http://www.ruby-lang.org The Ruby Language Home Page] has links to a wide range of resources for learning about Ruby, downloading releases of the C implementation of Ruby, documentation on Ruby, and community outlets for talking about Ruby.\n\n[http://www.pragmaticprogrammer.com/ The Pragmatic Programmers] are the publishers of the de facto standard Ruby text, \"Programming Ruby\". It is considered a must-have manual to the Ruby language and libraries.\n\nAlmost everything you learn about the Ruby language is directly applicable to working with JRuby. JRuby aims to be a drop-in replacement for the C implementation of Ruby.\n\n==What incompatibilities does JRuby have with the C implementation of Ruby? ==\n\nSee [[DifferencesBetweenMriAndJruby]].\n\n==How do I run JRuby without the command-line scripts?==\n\nFrequently users want to run JRuby via Eclipse, launched from an existing Java application, or other ways that do not use the command-line scripts. In addition to having jruby.jar and its dependency jars available in CLASSPATH, you must also have the following system properties set:\n\njruby.home=<path to root of JRuby installation>\n\nYou may also want to ensure the maximum memory is set higher than the JVM default; JRuby's own command-line scripts use a maximum of 256MB.\n\n==What if I want to use JRuby alongside C Ruby?  How do I keep from getting confused?==\nYou have two options:\n#Always invoke JRuby with e.g., <tt>jruby -S gem</tt>.\n#Put a handy bash snippet like this in your .bashrc to create \"j\" aliases to all the available commands (rails becomes jrails, rake becomes jrake, etc.)\n    for f in $JRUBY_HOME/bin/*; do\n      f=$(basename $f)\n      case $f in jruby*|jirb*|*.bat|*.rb|_*) continue ;; esac\n      eval \"alias j$f='jruby -S $f'\"\n    done\n\n==Why can't JRuby find my installed gems?==\n\nJRuby can only see the gems installed with the gem command shipped with JRuby. The gems installed this way will be stored under $JRUBY_HOME/lib/ruby. If you try to run Rails and get the following error \"Cannot find gem for Rails ~>1.2.2.0:\" (or whatever version you are using) the problem is probably that you haven't installed the Rails-gem and its dependencies with the JRuby gem-command.\n\n==When I implement a Java interface and provide my own initialize method, I can't construct it anymore.==\n\nIn JRuby 0.9.0, any class implementing a Java interface must explicitly call \"super\" in their initializers to set up the interface proxy. Add a super call to your implementation's initialize method and it should function.\n\n==How do I call JRuby from my existing Java program?==\n\nIf you do not intend to launch JRuby as a separate process, we recommend you use the [http://jakarta.apache.org/bsf/ Bean Scripting Framework] (BSF) or [https://scripting.dev.java.net/ Java 6's Scripting Support] (JSR223). We do not recommend calling directly into the JRuby runtime, since that code is subject to change before 1.0.\n\n== Where can I find the javadoc? ==\n\n\n==Why do I get a NoSuchMethodError when running JRuby 0.9.0?==\n\nSome users will see the following error when running JRuby 0.9.0:\n\nException in thread \"main\" java.lang.NoSuchMethodError:           java.lang.StringBuffer.append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;\n       at org.jruby.RubyString.cat(RubyString.java:223)\n       at org.jruby.RubyString.append(RubyString.java:508)\n       at org.jruby.RubyString.concat(RubyString.java:518) \n\nThis error comes about when JRuby is built under Java 5 or higher and run on Java 1.4. Java 5 has the append(CharSequence) method, so it uses that during compilation. Java 1.4 does not have that method.\n\nThe first release of JRuby 0.9.0 was mistakenly build with Java 5, so we released a second version compiled with Java 1.4. Make sure you're using a JRuby compiled with Java 1.4 if that's the version of Java you intend to run it under.\n\n==How do I get a Ruby backtrace when calling JRuby code from Java?==\n\nYou need to do something along the lines of:\n\n   try {\n     rubyCode.doSomething();\n   } catch (RaiseException e) {\n     e.getException().printBacktrace(System.err);\n   }\n\nNote that Java 6's scripting via the BSF libraries may not preserve stack traces (and also launches much slower).  It is often preferable (as of February 2007) to use JRuby's own integration.\n\n==Why do I get a java.lang.NoSuchMethodError: org.objectweb.asm.ClassWriter.visit() error when running jruby 1.X with a custom classpath?==\n\nThe problem stems from a ASM jar conflict. It was found by  setting a custom classpath, which includes a version of Spring that has a conflicting ASM jar, and then invoking jruby.  The easiest workaround is to build jruby-complete as a single jar and edit the jruby config file (not sure about windows, but it should be similar) to source only the jruby-complete jar. You will need to add ALL other jars, which i believe includes your jdbc driver as well.\n\n  svn co http://svn.codehaus.org/jruby/tags/jruby-1_0/\n  cd jruby-1_0\n  ant jar-complete\n  vi bin/jruby (see diff for edit)\n    #diff bin/jruby bin/jruby.orig \n    #89c89\n    #<     for j in \"$JRUBY_HOME\"/lib/jruby-complete.jar; do\n    #---\n    #>     for j in \"$JRUBY_HOME\"/lib/*.jar; do\n\n==How come Java can't find resources in class folders that I've appended to the $CLASSPATH global variable at runtime? ==\n\nJRubyClassLoader extends java.net.URLClassLoader which treats any URL that doesn't end with a slash as a jar. See [http://java.sun.com/j2se/1.5.0/docs/api/java/net/URLClassLoader.html URLClassLoader][http://www.usome.com]\n\n==Why don't my special characters (like \u00e7\u00e3o) appear correctly in my swing app ?==\n\nThe file encoding for the .rb file containing the special characters must be set to UTF-8. There were also issues in versions of JRuby before 1.2 where unicode characters were not properly pulled out via the toString method on Ruby objects. Try upgrading to 1.2 or higher.\n\n==Under OSX I get this error when trying to execute jruby:  Exception in thread \"main\" java.lang.NoClassDefFoundError: org/jruby/Main ==\n\nThe source of this problem is the inclusion of '.' (current directory) in your $PATH. You are also trying to execute jruby from $JRUBY_HOME/bin. There is a bug in the jruby bash script which prevents this from working.\n\nTo correct the issue, remove '.' from your $PATH and relaunch the shell. Alternately, if you really want to keep '.' in your $PATH (which you shouldn't, but see google for reasons why), then just change your working directory to something other than $JRUBY_HOME/bin and execute the 'jruby' command. It should launch just fine.\n  % cd /any/path/other/than/jruby_home\n  % jruby # should work\n\nNote that this bug has been fixed in JRuby 1.2.\n\n==How do I check which version of the JVM JRuby is running on?==\n\n  % jruby -rjava -e \"puts java.lang.System.get_property('java.version')\"\n\n=Running Rails=\n\n==Why does script/server (WEBrick) terminate right after saying \"Booting WEBrick...\"?==\n\nIf you are requiring ActiveRecord-JDBC in your environment and have not installed the gem, this will happen. Make sure you have the ActiveRecord-JDBC gem installed.\n\n==How do I avoid installing the Rails gem twice for both CRuby and JRuby?==\n\nYou just need to set GEM_HOME to point to your CRuby's gem directory.  For example, in tcsh:\n\n<pre>\nsetenv GEM_HOME /usr/local/lib/ruby/gems/1.8\n</pre>\n\nNote that on Windows, you should specify the path using unix-style directory separators. For example, if ruby is installed in c:\\ruby:\n\n<pre>\nset GEM_HOME=c:/ruby/lib/ruby/gems/1.8\n</pre>\n\n==I get the error 'undefined method `cattr_accessor' for ActiveRecord::Base:Class (NoMethodError)' after configuring activerecord-jdbc.  What is wrong?==\n\nYou are not requiring activerecord-jdbc properly.  Try requiring activerecord-jdbc in config/environment.rb this way:\n\n<pre>\nrequire 'jdbc_adapter'\n</pre>\n\n==I keep getting 500.html running rails app built by goldspike in a JEE Container. What is wrong?==\n\nYou may not have set the production DB settings in database.yml properly. goldspike by default builds a war that runs the app\nin production mode. You can confirm the problem by finding the production.log file. If you are using JBoss, then it lives in\n<pre>$JBOSS_HOME/server/my_app/tmp/my_rails_war1234.war</pre> where 1234 is some random number generated by JBoss.\n\nYou would find you have en error in the log like this:\n<pre>RuntimeError (The driver encountered an error: can't convert nil into String)</pre>\n\nTo fix this, just set the production DB settings in database.yml properly.\n\n==How can I load a ResourceBundle from Rails config directory ?==\nYou can add the config directory to jruby classpath in config/environment.rb\n  $CLASSPATH << \"file:///#{File.expand_path(File.join(RAILS_ROOT, 'config'))}/\"\n\nNow, because ResourcceBundle.getBundle do not seem to use the jruby classloader, we need to pass it explicitely. In the file you want to use the resource bundle do :\n  include Java\n  require 'jruby'\n  ...\n  bundle = java.util.ResourceBundle::getBundle(\"i18n\", java.util.Locale::FRENCH, JRuby.runtime.j_ruby_class_loader)\n\nNow you just need to put you i18n[_*].properties files in config/ et voil\u00e0!\n\n=Calling Into Java=\n\n==Why do I get ClassNotFoundException when I call java.lang.Class.forName from Ruby?==\n\nWhen JRuby runs at the command line, it loads into the bootstrap classloader. This classloader lives above CLASSPATH, so libraries you add to CLASSPATH are not normally visible. Because Class.forName uses the classloader of the nearest non-system class that called it, it ends up seeing JRuby as the caller and looking for classes only in CLASSPATH.\n\nThe workaround for this is simple: use JRuby's import or include_class methods to load the class, or just reference it directly as in Java::my.package.MyClass or org.postgresql.Driver.\n\n==How do I access an inner class with a lowercase name?==\n\nSometimes, developers name their inner classes beginning with a lowercase letter. This prevents jruby from accessing it the \"normal way\" (it thinks it's a method). For example:\n\nIn java (from the com.sun.enterprise.ee.cms.core package of the [https://shoal.dev.java.net/ Shoal project])\n\n GMSConstants.shutdownType.INSTANCE_SHUTDOWN\n\nWhereas in jruby, you can get at that using the following:\n\n >> ShutdownType = JavaUtilities.get_proxy_class('com.sun.enterprise.ee.cms.core.GMSConstants$shutdownType')\n\n=Java and JRuby interop\n\n== How do I create a primitive Java array in JRuby?\n\nYou can convert existing ruby arrays to primitive Java arrays very simply:\n\n [1,2,3].to_java => makes an object array\n [1,2,3].to_java :byte => makes a byte array\n [1,2,3].to_java :String => makes a String array\n\nTo create empty arrays:\n\n Java::byte[12].new => makes a new byte[]\n java.lang.String[12].new => makes a new String[]\n\n==How can I implement a Java Interface using a Ruby Class?==\n\nThere are two separate ways:\n\n# include an interface into the class\n class MyListener\n   include java.awt.event.ActionListener\n \n   def actionPerformed(event)\n     button.text = \"I have been pressed\"\n   end\n end\n# Use implicit closure conversion\n button.add_action_listener { |event|  button.text = \"I have been pressed\" }\n\n= Compiler-related questions\n\n==How can I Compile my Ruby into Java?\n\nYou can do Ahead-Of-Time (AOT) compile via these [[JRubyCompiler|instructions]]\n\n= Troubleshooting\n\n== My ruby scripts under cygwin get executed as if they are bourne shell scripts\n\n* Add ''.bat'' extension to jruby scripts\n**If you try to run JRuby on cygwin for Windows and use the commands without the ''.bat'' extension it will default to the bourne shell versions.  I'm not sure these work properly.\n**'''Example using gems:''' ''$JRUBY_HOME/bin/gem.bat install rails -y --no-ri --no-rdoc''\n\n== My db:migrate fails with \"undefined method `create_database' for class `#<Class:01x1e30857>'\"?\n\nIn this case, try to run the migrations with:\n\n jruby -S rake db:migrate SKIP_AR_JDBC_RAKE_REDEFINES=1\n\nYou can also just put\n\n ENV['SKIP_AR_JDBC_RAKE_REDEFINES'] = '1'\n\nsomewhere in your Rakefile, or in a custom Rakefile in lib/tasks/*.rake.\n\n== I am having a weird JNI problem? help me?\n\nThere are two scenarios in which JNI problems occur: [1] when the jar is in jruby 1.1.2's lib, or [2] when the jar is loaded using ruby's \"require\" statement in jruby < 1.1.\n\n=== jruby 1.1.2 + ===\n\nJruby 1.1.2 changes how it sets up the classpath. Earlier versions merged the CLASSPATH environment variable with all .jar files in JRUBY_HOME/lib and passed them to the JVM via the -classpath option. Jruby 1.1.2 instead passes all .jar files in lib to the JVM via the -Xbootclasspath/a: option, while CLASSPATH is passed using -classpath. Jjar files that use JNI (e.g. sqljdbc.jar) don't work correctly when they're in the boot classpath, so they should not be placed in jruby's lib directory. Instead, they should be loaded with 'require' or by setting the CLASSPATH environment variable.\n\n=== jruby < 1.1 ===\n\nIn older versions of jruby (pre 1.1), loading a jar into multiple jruby runtimes with <code>require</code> can cause problems with JNI. For example, when using MS SQL Server and integrated security in a rails application and if sqljdbc is loaded with a <code>require</code> statement, running <code>jruby -S rake test:units</code> results in the following error:\n\n com.microsoft.sqlserver.jdbc.AuthenticationJNI\n &lt;clinit&gt;\n WARNING: Failed to load the sqljdbc_auth.dll\n\nThe error message is displayed because sqljdbc.jar is loaded twice, but the OS and/or JVM and/or native library will only allow the native library to be loaded and initialized once. Two ways to work around this problem are:\n\n# Load the jar on the classpath instead of with a <code>require</code>. This will cause it to be loaded by a different classloader, so the jar file will only be loaded once per process.\n# Tell jruby to launch other jrubies out-of-proc with <code>jruby '''-J-Djruby.launch.inproc=false''' ''rest of command''</code>. This will cause a second JVM to be launched in the <code>rake test:units</code> example above.\n","created_at":"2009-06-12T19:40:25Z","content_type":"application/vnd.com.kenai.page.revision+json"}