{"href":"https://kenai.com/api/projects/jruby/features/wiki/pages/Ruby_JRubySecurity/revisions/1.json","name":"Ruby_JRubySecurity","number":1,"page_href":"https://kenai.com/api/projects/jruby/features/wiki/pages/Ruby_JRubySecurity.json","person":"headius","description":"","text":"A new Implentation to replace Safe/Taint.  Since Safe and Taint do not work and provides a false sense of \nsecurity.  There are two options using a Sandbox type environment or a permission based protocol.  The Sandbox has been around since Java 1.0 and was found to be good only at a macro level.  For finer grain control the Permission class and AccessControl Class was introduced in Java 1.2.  \n\nHaving a Permission based security implementation would be ideal.\n\n\n----\n\n'''Requirements'''\n\n* it must be something that can be implemented in MRI/KRI, possibly\nusing the same API/mechanisms used right now.\n* it must not introduce overhead back into the system like taint/safe\ndoes now. \n* Security should be based on additon of rights instead of the removal of them.\n* Fine Grain control should be allowed for distrubted programming.  for example DRb\n\n\n\n'''Possible Solutions'''\n\n* Keep the current Implementation of Safe and Taint\n* A sandbox based on the same principles as the Java Sandbox.  \n- Here is a sandbox based for MRI[http://code.whytheluckystiff.net/sandbox].\n* Use the a Permission based achitecture such as Java 1.2 and later.\n","created_at":"2009-03-21T20:13:28Z","content_type":"application/vnd.com.kenai.page.revision+json"}