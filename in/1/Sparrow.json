{"href":"https://kenai.com/api/projects/jruby/features/wiki/pages/Sparrow/revisions/1.json","name":"Sparrow","number":1,"page_href":"https://kenai.com/api/projects/jruby/features/wiki/pages/Sparrow.json","person":"alexbcoles","description":"","text":"'''Sparrow''' (http://github.com/leandrosilva/sparrow) is a very simple JMS client for messaging application based on JRuby.\n\n== Install ==\n\n\nAdd Github as a source for your RubyGem:\n\n<pre>\ngem sources -a http://gems.github.com\n</pre>\n\nMake install:\n\n<pre>\nsudo gem install leandrosilva-sparrow\n</pre>\n\n== Example ==\n\n''WARNING: OC4J will be used as Java EE application server, but any other could be used with no problems.''\n\nCreate a file named ''my_sparrow_test.rb'' and put the script below:\n\n<pre>\nrequire 'rubygems'  \nrequire 'sparrow'  \n\n# Initial setup (that has to be done once)\njms_client = Sparrow::JMS::Connection::Client.new do |props|  \n  props.client_jar_file         = '/oc4j_extended_101330/j2ee/home/oc4jclient.jar'  \n  props.initial_context_factory = 'oracle.j2ee.naming.ApplicationClientInitialContextFactory'  \n  props.provider_url            = 'ormi://localhost:23791'  \n  props.security_principal      = 'oc4jadmin'  \n  props.security_credentials    = 'welcome'  \nend  \n\njms_client.enable_connection_factories(  \n    :queue_connection_factory => 'jms/MyQueueCF'  \n  )  \n  \njms_client.enable_queues(  \n    :my_queue => 'jms/MyQueue'  \n  )  \n  \n# Send message\njms_client.queue_sender(:my_queue).send_text_message('sparrow rocks!') do |msg|  \n  msg.set_string_property('recipient', 'sparrow-example')  \nend  \n  \n# Receive message\njms_client.queue_receiver(:my_queue).receive_message(  \n    :timeout  => 5000,  \n    :selector => \"recipient = 'sparrow-example'\"  \n  ) do |msg|  \n  \n  puts msg.is_text_message?    # true  \n  puts msg.text                # sparrow rocks!  \nend\n</pre>\n\nSo, now start the OC4J server, create the connection factory (jms/MyQueueCF) and queue (jms/MyQueue), and run above script:\n\n<pre>\njruby my_sparrow_test.rb\n</pre>\n\nOutput:\n\n<pre>\nsparrow rocks! =)\n</pre>\n\n== Related Articles ==\n\n* [http://leandrosilva.com.br/2008/08/14/executar-jruby-a-partir-do-java Executar JRuby a partir do Java (pt_BR)] Article about integration of Java with JRuby, showing how running JRuby code from Java.\n","created_at":"2009-03-23T11:52:24Z","content_type":"application/vnd.com.kenai.page.revision+json"}