{"href":"https://kenai.com/api/projects/jruby/features/wiki/pages/Adding_Datatypes_to_ActiveRecord-JDBC/revisions/1.json","name":"Adding_Datatypes_to_ActiveRecord-JDBC","number":1,"page_href":"https://kenai.com/api/projects/jruby/features/wiki/pages/Adding_Datatypes_to_ActiveRecord-JDBC.json","person":"looselytyped","description":"","text":"If your database connection adapter doesn't support a datatype you need by default, you can override the default datatype definitions with your own.\n\nFirst, check to see what datatypes are already being extended in your adapter.  I use MySQL, so I would look in the ActiveRecord-JDBC gem directory at <tt>lib/jdbc_adapter/jdbc_mysql.rb</tt>.  At the top of the file is the following:\n\n<pre>\nmodule JdbcSpec\n  module MySQL\n    def modify_types(tp)\n      tp[:primary_key] = \"int(11) DEFAULT NULL auto_increment PRIMARY KEY\"\n      tp[:decimal] = { :name => \"decimal\" }\n      tp\n    end\n</pre>\n\nAs we see here, the default datatype for a table's primary key is being defined.  Also, it is defining the symbol :decimal to reference the MySQL \"decimal\" datatype (in the <tt>:name => \"decimal\"</tt> section.)\n\nWhat we want to do is basically copy that into the <tt>environment.rb</tt> file in our Rails project, overriding the default modify_types method and adding in our own datatypes.\n\nSince I, for example, want support for unsigned 64-bit integers (for both the primary key and for other columns) and large text fields, I would add the following to my <tt>environment.rb</tt> file:\n\n<pre>\nmodule JdbcSpec\n  module MySQL\n    def modify_types(tp)\n      tp[:primary_key] = \"bigint unsigned DEFAULT NULL auto_increment PRIMARY KEY\"\n      tp[:decimal] = { :name => \"decimal\" }\n      tp[:longtext] = { :name => \"longtext\" }\n      tp[:ubigint] = { :name => \"bigint unsigned\" }\n      tp \n    end\n  end\nend\n</pre>\n\n\nWith this in place, I can create a migration using my new datatypes:\n\n<pre>\nclass CreateWidgets < ActiveRecord::Migration\n  def self.up\n    create_table :widgets do |t|\n      # t.column :name, :string\n      t.column :footext, :longtext\n      t.column :barnum, :ubigint\n      t.column :boringnormal, :string\n    end\n  end\n\n  def self.down\n    drop_table :widgets\n  end\nend\n</pre>\n\nAnd after running <tt>rake db:migrate</tt>, I have the following table in my database:\n\n<pre>\nmysql> describe widgets;\n+--------------+---------------------+------+-----+---------+----------------+\n| Field        | Type                | Null | Key | Default | Extra          |\n+--------------+---------------------+------+-----+---------+----------------+\n| id           | bigint(20) unsigned | NO   | PRI | NULL    | auto_increment | \n| footext      | longtext            | YES  |     | NULL    |                | \n| barnum       | bigint(20) unsigned | YES  |     | NULL    |                | \n| boringnormal | varchar(255)        | YES  |     | NULL    |                | \n+--------------+---------------------+------+-----+---------+----------------+\n4 rows in set (0.01 sec)\n</pre>\n","created_at":"2009-03-24T23:00:46Z","content_type":"application/vnd.com.kenai.page.revision+json"}