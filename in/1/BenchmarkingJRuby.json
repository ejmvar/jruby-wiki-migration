{"href":"https://kenai.com/api/projects/jruby/features/wiki/pages/BenchmarkingJRuby/revisions/1.json","name":"BenchmarkingJRuby","number":1,"page_href":"https://kenai.com/api/projects/jruby/features/wiki/pages/BenchmarkingJRuby.json","person":"pfussell","description":"Section originally in Getting Started--stored here in case we want to use it later","text":"==Benchmarking JRuby==\nThe current popular way to benchmark JRuby performance is to perform a gem installation of Rake. The install process exercises a number of APIs and represents a fairly general-purpose application of Ruby. It's also extremely interpreter-heavy.\n\nAfter getting a build of JRuby, as above, the following steps can be used to benchmark JRuby using Gem and Rake:\n\n*Fetch the current Rake gem from [http://rubyforge.org/frs/?group_id=50 RubyForge]\n*Execute the following command (putting JRUBY_HOME/bin in your path or referencing it directly):\n JRUBY_HOME/bin/gem install <rake gem file>\n*By preceding this command line with the unix \"time\" command you can test end-to-end performance. Of course there are other ways to wire in profiling and performance-monitoring tools that won't be detailed here.\n\nA sample run from a MacBook Pro under Apple's Java 6 JVM is shown below:\n\n Nutters-Computer:~/Documents/workspace/jruby headius$ time bin/gem install rake-0.7.1.gem \n Successfully installed rake, version 0.7.1\n Installing ri documentation for rake-0.7.1...\n Installing RDoc documentation for rake-0.7.1...\n \n real    0m52.596s\n user    0m51.740s\n sys     0m2.146s","created_at":"2009-06-19T19:56:56Z","content_type":"application/vnd.com.kenai.page.revision+json"}