{"href":"https://kenai.com/api/projects/jruby/features/wiki/pages/JDBC/revisions/1.json","name":"JDBC","number":1,"page_href":"https://kenai.com/api/projects/jruby/features/wiki/pages/JDBC.json","person":"john_brock","description":"","text":"It is possible to use JDBC directly from within JRuby. A simple function using the MySQL JDBC driver to perform a SELECT is shown below:\r\n\r\n<pre>\r\ndef vegetableFinder(vegetable)\r\n\t# This function takes a hashmap of vegetables and attempts to \r\n\t# find them from our grocery database. For each item found, we \r\n\t# call our 'makevegetablesoup' function.\r\n\r\n\t# Load all required gems\r\n\trequire \"rubygems\"\r\n\trequire \"jdbc/mysql\"\r\n\trequire \"java\"\r\n\t\r\n\tbegin\r\n\t\t# Prep the connection\r\n                Java::com.mysql.jdbc.Driver\r\n\t\tuserurl = \"jdbc:mysql://HOST/DATABASE\"\r\n                connSelect = java.sql.DriverManager.get_connection(userurl, \"USERNAME\", \"PASSWORD\")\r\n\t\tstmtSelect = connSelect.create_statement\r\n\t\t\r\n\t\t# Define the query\r\n\t\tselectquery = \"SELECT name, type, size, price\r\n\t\t\t\t\tFROM vegetables\r\n\t\t\t\t\tWHERE type = \\\"#{vegetable[\"type\"]}\\\" \r\n\t\t\t\t\tAND size = \\\"#{vegetable[\"size\"]}\\\";\"\r\n\r\n\t\t# Execute the query\r\n\t\trsS = stmtSelect.execute_query(selectquery)\r\n\r\n\t\t# For each row returned do some stuff\r\n\t\twhile (rsS.next) do\r\n\t\t\tveg = Hash.new\r\n\t\t\tveg[\"vegname\"] = rsS.getObject(\"name\")\r\n\t\t\tveg[\"vegtype\"] = rsS.getObject(\"type\")\r\n\t\t\tveg[\"vegprice\"] = rsS.getObject(\"size\")\r\n\t\t\tveg[\"vegsize\"] = rsS.getObject(\"price\")\r\n\t\t\tmakevegetablesoup(veg)\r\n\t\tend\r\n\tend\r\n\t# Close off the connection\r\n\tstmtSelect.close\r\n        connSelect.close\r\n\treturn truth\r\nend\r\n</pre>\r\n\r\nINSERTs and UPDATEs are much the same. Again, using the MySQL JDBC driver a simple insert is shown below:\r\n\r\n<pre>\r\ndef groceryInsert(vegetable)\r\n\t# Inserts a new vegetable type into the grocery database\r\n\r\n\t# Load all required gems\r\n\trequire \"rubygems\"\r\n\trequire \"jdbc/mysql\"\r\n\trequire \"java\"\r\n\t\r\n\tbegin\r\n\t\t# Prep the connection\r\n                Java::com.mysql.jdbc.Driver\r\n\t\tuserurl = \"jdbc:mysql://HOST/DATABASE\"\r\n\t\tconnInsert = java.sql.DriverManager.get_connection(userurl, \"USERNAME\", \"PASSWORD\")\r\n\t\tstmtInsert = connInsert.create_statement\r\n\r\n\t\t# Do the insert\r\n\t\trsI = stmtInsert.execute_update(\"INSERT INTO vegetables\t\t\t\t\t\t\t\t\t\t(name,type,size,price)\r\n\t\t\t\t\t\tVALUES\r\n\t\t\t\t\t\t\t   (\r\n\t\t\t\t\t\t\t   '#{vegetable[\"name\"]}',\r\n\t\t\t\t\t\t\t   '#{vegetable[\"type\"]}',\r\n\t\t\t\t\t\t\t   '#{vegetable[\"size\"]}',\r\n\t\t\t\t\t\t\t   '#{vegetable[\"price\"]}'\r\n\t\t\t\t\t\t\t   );\")\r\n\t\tend\r\n\tend\r\n\t# Close off the connection\r\n\tstmtInsert.close\r\n        connInsert.close\r\n\r\n\t# Return the number of records inserted\r\n\treturn rsI\r\nend\r\n</pre>\r\n\r\nRemember to have the JDBC driver for your database in your CLASSPATH!\r\n","created_at":"2008-08-12T21:02:00Z","content_type":"application/vnd.com.kenai.page.revision+json"}